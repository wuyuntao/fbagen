export namespace Generators {

    class GeneratorError extends Error {
    }

    interface StatementList {
        type: String;
        statements: Statement[];
    }

    interface Statement {
        type: String;
    }

    interface NamespaceStatement extends Statement {
        namespace: String;
    }

    export abstract class Generator {
        static STATEMENT_LIST = "statement_list";
        static NAMESPACE = "namespace_decl";

        protected namespace: String;

        constructor(schema: StatementList) {
            if (schema.type != Generator.STATEMENT_LIST)
                throw new GeneratorError(`Missing '${Generator.STATEMENT_LIST}'`);

            if (schema.statements.length == 0)
                throw new GeneratorError(`Missing statements in '${Generator.STATEMENT_LIST}'`);

            this.findNamespace(schema);
        }

        private findNamespace(schema: StatementList) {
            for (let statement of schema.statements) {
                if (statement.type == Generator.NAMESPACE) {
                    let nss = <NamespaceStatement>statement;
                    if (this.namespace == null) {
                        this.namespace = nss.namespace;
                        console.info(`Found namespace ${nss.namespace}`);
                    }
                    else
                        throw new GeneratorError(`Duplicate namespace`);
                }
            }
        }

        public abstract generate(): String;

        public abstract ext(): String;
    }

    export class CSharpGenerator extends Generator {
        constructor(schema) {
            super(schema)
        }

        public generate(): String {
            let code = `// automatically generated by fbagen, do not modify
`;

            code += this.beginNamespace();
            code += this.endNamespace();
            return code;
        }

        beginNamespace(): String {
            return `
namespace ${this.namespace}
{
`
        }

        endNamespace(): String {
            return `
}`
        }

        public ext(): String {
            return ".cs";
        }
    }
}
